# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: AVMC Admin Auth API
    description: AVMC 后台管理脚手架系统-认证服务
    contact:
        name: AVMC Admin架构
        url: https://github.com/grpc-ecosystem/grpc-gateway
        email: 737043980@qq.com
    license:
        name: BSD 3-Clause License
        url: https://github.com/grpc-ecosystem/grpc-gateway/blob/master/LICENSE.txt
    version: 1.0.0
servers:
    - url: https://api.example.com/v1
      description: Production server
paths:
    /admin/v1/auth/codes:
        get:
            tags:
                - AuthService
                - 认证服务
            summary: 登录用户权限码
            description: 登录用户权限码
            operationId: AuthService_Codes
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CodesResponse'
            security:
                - BearerAuth: []
    /admin/v1/auth/login/code:
        post:
            tags:
                - AuthService
                - 认证服务
            summary: 用户验证码登录
            description: 通过手机号和验证码登录认证服务
            operationId: AuthService_LoginCode
            parameters:
                - name: password.username
                  in: query
                  schema:
                    type: string
                - name: password.password
                  in: query
                  schema:
                    type: string
                - name: domainId
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: grandType
                  in: query
                  schema:
                    enum:
                        - GRAND_TYPE_UNSPECIFIED
                        - GRAND_TYPE_PASSWORD
                        - GRAND_TYPE_CODE
                    type: string
                    format: enum
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LoginCode'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LoginResponse'
    /admin/v1/auth/login/password:
        post:
            tags:
                - AuthService
                - 认证服务
            summary: 用户密码登录
            description: 通过用户名和密码登录认证服务
            operationId: AuthService_LoginPassword
            parameters:
                - name: code.phone
                  in: query
                  schema:
                    type: string
                - name: code.code
                  in: query
                  schema:
                    type: string
                - name: domainId
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: grandType
                  in: query
                  schema:
                    enum:
                        - GRAND_TYPE_UNSPECIFIED
                        - GRAND_TYPE_PASSWORD
                        - GRAND_TYPE_CODE
                    type: string
                    format: enum
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LoginPassword'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LoginResponse'
    /admin/v1/auth/logout:
        post:
            tags:
                - AuthService
                - 认证服务
            summary: 用户登出
            description: 退出登录并失效当前令牌
            operationId: AuthService_Logout
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LogoutRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LogoutResponse'
            security:
                - BearerAuth: []
    /admin/v1/auth/menus:
        get:
            tags:
                - AuthService
                - 认证服务
            summary: 登录用户菜单信息
            description: 登录用户菜单信息
            operationId: AuthService_Menus
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/MenusResponse'
            security:
                - BearerAuth: []
    /admin/v1/auth/profile:
        get:
            tags:
                - AuthService
                - 认证服务
            summary: 登录用户简介信息
            description: 登录用户简介信息
            operationId: AuthService_Profile
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ProfileResponse'
            security:
                - BearerAuth: []
    /admin/v1/auth/refresh-token:
        post:
            tags:
                - AuthService
                - 认证服务
            summary: 刷新令牌
            description: 使用刷新令牌获取新的访问令牌
            operationId: AuthService_RefreshToken
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RefreshTokenRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RefreshTokenResponse'
            security:
                - BearerAuth: []
    /admin/v1/auth/vben/profile:
        get:
            tags:
                - AuthService
                - 认证服务
            summary: 登录用户Vben简介信息
            description: 登录用户Vben简介信息
            operationId: AuthService_VbenProfile
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VbenProfileResponse'
            security:
                - BearerAuth: []
    /admin/v1/depts:
        get:
            tags:
                - DeptService
                - 部门管理服务
            summary: 获取部门列表
            description: 获取部门列表
            operationId: DeptService_ListDept
            parameters:
                - name: page
                  in: query
                  description: 当前页码
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: query
                  description: 每页的行数
                  schema:
                    type: integer
                    format: int32
                - name: query
                  in: query
                  description: 与过滤参数
                  schema:
                    type: string
                - name: or
                  in: query
                  description: 或过滤参数
                  schema:
                    type: string
                - name: orderBy
                  in: query
                  description: 排序条件
                  schema:
                    type: array
                    items:
                        type: string
                - name: nopaging
                  in: query
                  description: 是否不分页
                  schema:
                    type: boolean
                - name: fieldMask
                  in: query
                  description: 字段掩码
                  schema:
                    type: string
                    format: field-mask
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListDeptResponse'
            security:
                - BearerAuth: []
        post:
            tags:
                - DeptService
                - 部门管理服务
            summary: 创建部门
            description: 创建部门
            operationId: DeptService_CreateDept
            parameters:
                - name: operatorId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Dept'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateDeptResponse'
            security:
                - BearerAuth: []
    /admin/v1/depts/{id}:
        get:
            tags:
                - DeptService
                - 部门管理服务
            summary: 获取部门数据
            description: 获取部门数据
            operationId: DeptService_GetDept
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Dept'
            security:
                - BearerAuth: []
        put:
            tags:
                - DeptService
                - 部门管理服务
            summary: 更新部门
            description: 更新部门
            operationId: DeptService_UpdateDept
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
                - name: operatorId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Dept'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateDeptResponse'
            security:
                - BearerAuth: []
        delete:
            tags:
                - DeptService
                - 部门管理服务
            summary: 删除部门
            description: 删除部门
            operationId: DeptService_DeleteDept
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
                - name: operatorId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteDeptResponse'
            security:
                - BearerAuth: []
    /admin/v1/menus:
        get:
            tags:
                - MenuService
                - 菜单管理服务
            summary: 获取菜单列表
            description: 获取菜单列表
            operationId: MenuService_ListMenu
            parameters:
                - name: page
                  in: query
                  description: 当前页码
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: query
                  description: 每页的行数
                  schema:
                    type: integer
                    format: int32
                - name: query
                  in: query
                  description: 与过滤参数
                  schema:
                    type: string
                - name: or
                  in: query
                  description: 或过滤参数
                  schema:
                    type: string
                - name: orderBy
                  in: query
                  description: 排序条件
                  schema:
                    type: array
                    items:
                        type: string
                - name: nopaging
                  in: query
                  description: 是否不分页
                  schema:
                    type: boolean
                - name: fieldMask
                  in: query
                  description: 字段掩码
                  schema:
                    type: string
                    format: field-mask
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListMenuResponse'
            security:
                - BearerAuth: []
        post:
            tags:
                - MenuService
                - 菜单管理服务
            summary: 创建菜单
            description: 创建菜单
            operationId: MenuService_CreateMenu
            parameters:
                - name: operatorId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Menu'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateMenuResponse'
            security:
                - BearerAuth: []
    /admin/v1/menus/all:
        get:
            tags:
                - MenuService
                - 菜单管理服务
            summary: 获取所有菜单
            description: 获取所有菜单
            operationId: MenuService_ListMenuAll
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListMenuResponse'
            security:
                - BearerAuth: []
    /admin/v1/menus/name-exists:
        get:
            tags:
                - MenuService
                - 菜单管理服务
            summary: 获取菜单名是否存在
            description: 获取菜单名是否存在
            operationId: MenuService_ExistMenuByName
            parameters:
                - name: id
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: name
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ExistMenuByNameResponse'
            security:
                - BearerAuth: []
    /admin/v1/menus/name-exists/{name}:
        get:
            tags:
                - MenuService
                - 菜单管理服务
            summary: 获取菜单名是否存在
            description: 获取菜单名是否存在
            operationId: MenuService_ExistMenuByName
            parameters:
                - name: name
                  in: path
                  required: true
                  schema:
                    type: string
                - name: id
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ExistMenuByNameResponse'
            security:
                - BearerAuth: []
    /admin/v1/menus/path-exists:
        get:
            tags:
                - MenuService
                - 菜单管理服务
            summary: 判断菜单路径是否存在
            description: 判断菜单路径是否存在
            operationId: MenuService_ExistMenuByPath
            parameters:
                - name: id
                  in: query
                  schema:
                    type: integer
                    format: uint32
                - name: path
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ExistMenuByPathResponse'
            security:
                - BearerAuth: []
    /admin/v1/menus/path-exists/{path}:
        get:
            tags:
                - MenuService
                - 菜单管理服务
            summary: 判断菜单路径是否存在
            description: 判断菜单路径是否存在
            operationId: MenuService_ExistMenuByPath
            parameters:
                - name: path
                  in: path
                  required: true
                  schema:
                    type: string
                - name: id
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ExistMenuByPathResponse'
            security:
                - BearerAuth: []
    /admin/v1/menus/tree:
        get:
            tags:
                - MenuService
                - 菜单管理服务
            summary: 获取菜单树
            description: 获取菜单树
            operationId: MenuService_ListMenuTree
            parameters:
                - name: pid
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListMenuTreeResponse'
            security:
                - BearerAuth: []
    /admin/v1/menus/tree/{pid}:
        get:
            tags:
                - MenuService
                - 菜单管理服务
            summary: 获取菜单树
            description: 获取菜单树
            operationId: MenuService_ListMenuTree
            parameters:
                - name: pid
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListMenuTreeResponse'
            security:
                - BearerAuth: []
    /admin/v1/menus/{id}:
        get:
            tags:
                - MenuService
                - 菜单管理服务
            summary: 获取菜单数据
            description: 获取菜单数据
            operationId: MenuService_GetMenu
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Menu'
            security:
                - BearerAuth: []
        put:
            tags:
                - MenuService
                - 菜单管理服务
            summary: 更新菜单
            description: 更新菜单
            operationId: MenuService_UpdateMenu
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
                - name: operatorId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Menu'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateMenuResponse'
            security:
                - BearerAuth: []
        delete:
            tags:
                - MenuService
                - 菜单管理服务
            summary: 删除菜单
            description: 删除菜单
            operationId: MenuService_DeleteMenu
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
                - name: operatorId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteMenuResponse'
            security:
                - BearerAuth: []
    /admin/v1/posts:
        get:
            tags:
                - PostService
                - 岗位管理服务
            summary: 获取岗位列表
            description: 获取岗位列表
            operationId: PostService_ListPost
            parameters:
                - name: page
                  in: query
                  description: 当前页码
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: query
                  description: 每页的行数
                  schema:
                    type: integer
                    format: int32
                - name: query
                  in: query
                  description: 与过滤参数
                  schema:
                    type: string
                - name: or
                  in: query
                  description: 或过滤参数
                  schema:
                    type: string
                - name: orderBy
                  in: query
                  description: 排序条件
                  schema:
                    type: array
                    items:
                        type: string
                - name: nopaging
                  in: query
                  description: 是否不分页
                  schema:
                    type: boolean
                - name: fieldMask
                  in: query
                  description: 字段掩码
                  schema:
                    type: string
                    format: field-mask
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListPostResponse'
            security:
                - BearerAuth: []
        post:
            tags:
                - PostService
                - 岗位管理服务
            summary: 创建岗位
            description: 创建岗位
            operationId: PostService_CreatePost
            parameters:
                - name: operatorId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Post'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreatePostResponse'
            security:
                - BearerAuth: []
    /admin/v1/posts/{id}:
        get:
            tags:
                - PostService
                - 岗位管理服务
            summary: 获取岗位数据
            description: 获取岗位数据
            operationId: PostService_GetPost
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Post'
            security:
                - BearerAuth: []
        put:
            tags:
                - PostService
                - 岗位管理服务
            summary: 更新岗位
            description: 更新岗位
            operationId: PostService_UpdatePost
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
                - name: operatorId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Post'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdatePostResponse'
            security:
                - BearerAuth: []
        delete:
            tags:
                - PostService
                - 岗位管理服务
            summary: 删除岗位
            description: 删除岗位
            operationId: PostService_DeletePost
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
                - name: operatorId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeletePostResponse'
            security:
                - BearerAuth: []
    /admin/v1/roles:
        get:
            tags:
                - RoleService
                - 角色管理服务
            summary: 获取角色列表
            description: 获取角色列表
            operationId: RoleService_ListRole
            parameters:
                - name: page
                  in: query
                  description: 当前页码
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: query
                  description: 每页的行数
                  schema:
                    type: integer
                    format: int32
                - name: query
                  in: query
                  description: 与过滤参数
                  schema:
                    type: string
                - name: or
                  in: query
                  description: 或过滤参数
                  schema:
                    type: string
                - name: orderBy
                  in: query
                  description: 排序条件
                  schema:
                    type: array
                    items:
                        type: string
                - name: nopaging
                  in: query
                  description: 是否不分页
                  schema:
                    type: boolean
                - name: fieldMask
                  in: query
                  description: 字段掩码
                  schema:
                    type: string
                    format: field-mask
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListRoleResponse'
            security:
                - BearerAuth: []
        post:
            tags:
                - RoleService
                - 角色管理服务
            summary: 创建角色
            description: 创建角色
            operationId: RoleService_CreateRole
            parameters:
                - name: operatorId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Role'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateRoleResponse'
            security:
                - BearerAuth: []
    /admin/v1/roles/{id}:
        get:
            tags:
                - RoleService
                - 角色管理服务
            summary: 获取角色数据
            description: 获取角色数据
            operationId: RoleService_GetRole
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Role'
            security:
                - BearerAuth: []
        put:
            tags:
                - RoleService
                - 角色管理服务
            summary: 更新角色
            description: 更新角色
            operationId: RoleService_UpdateRole
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
                - name: operatorId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Role'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateRoleResponse'
            security:
                - BearerAuth: []
        delete:
            tags:
                - RoleService
                - 角色管理服务
            summary: 删除角色
            description: 删除角色
            operationId: RoleService_DeleteRole
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
                - name: operatorId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteRoleResponse'
            security:
                - BearerAuth: []
    /admin/v1/users:
        get:
            tags:
                - UserService
                - 用户管理服务
            summary: 获取用户列表
            description: 获取用户列表
            operationId: UserService_ListUser
            parameters:
                - name: page
                  in: query
                  description: 当前页码
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: query
                  description: 每页的行数
                  schema:
                    type: integer
                    format: int32
                - name: query
                  in: query
                  description: 与过滤参数
                  schema:
                    type: string
                - name: or
                  in: query
                  description: 或过滤参数
                  schema:
                    type: string
                - name: orderBy
                  in: query
                  description: 排序条件
                  schema:
                    type: array
                    items:
                        type: string
                - name: nopaging
                  in: query
                  description: 是否不分页
                  schema:
                    type: boolean
                - name: fieldMask
                  in: query
                  description: 字段掩码
                  schema:
                    type: string
                    format: field-mask
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUserResponse'
            security:
                - BearerAuth: []
        post:
            tags:
                - UserService
                - 用户管理服务
            summary: 创建用户
            description: 创建用户
            operationId: UserService_CreateUser
            parameters:
                - name: operatorId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/User'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateUserResponse'
            security:
                - BearerAuth: []
    /admin/v1/users/simple:
        get:
            tags:
                - UserService
                - 用户管理服务
            summary: 获取用户简单列表
            description: 获取用户简单列表
            operationId: UserService_ListUserSimple
            parameters:
                - name: page
                  in: query
                  description: 当前页码
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: query
                  description: 每页的行数
                  schema:
                    type: integer
                    format: int32
                - name: query
                  in: query
                  description: 与过滤参数
                  schema:
                    type: string
                - name: or
                  in: query
                  description: 或过滤参数
                  schema:
                    type: string
                - name: orderBy
                  in: query
                  description: 排序条件
                  schema:
                    type: array
                    items:
                        type: string
                - name: nopaging
                  in: query
                  description: 是否不分页
                  schema:
                    type: boolean
                - name: fieldMask
                  in: query
                  description: 字段掩码
                  schema:
                    type: string
                    format: field-mask
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUserResponse'
            security:
                - BearerAuth: []
    /admin/v1/users/{id}:
        get:
            tags:
                - UserService
                - 用户管理服务
            summary: 获取用户数据
            description: 获取用户数据
            operationId: UserService_GetUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
            security:
                - BearerAuth: []
        put:
            tags:
                - UserService
                - 用户管理服务
            summary: 更新用户
            description: 更新用户
            operationId: UserService_UpdateUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
                - name: operatorId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/User'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateUserResponse'
            security:
                - BearerAuth: []
        delete:
            tags:
                - UserService
                - 用户管理服务
            summary: 删除用户
            description: 删除用户
            operationId: UserService_DeleteUser
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: uint32
                - name: operatorId
                  in: query
                  schema:
                    type: integer
                    format: uint32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteUserResponse'
            security:
                - BearerAuth: []
components:
    schemas:
        CodesResponse:
            type: object
            properties:
                codes:
                    type: array
                    items:
                        type: string
                    description: 登录用户权限码
            description: 登录用户权限码 - 回应
        CreateDeptResponse:
            type: object
            properties: {}
            description: 创建部门响应
        CreateMenuResponse:
            type: object
            properties: {}
            description: 创建菜单响应
        CreatePostResponse:
            type: object
            properties: {}
            description: 创建岗位响应
        CreateRoleResponse:
            type: object
            properties: {}
            description: 创建角色响应
        CreateUserResponse:
            type: object
            properties: {}
        DeleteDeptResponse:
            type: object
            properties: {}
            description: 删除部门响应
        DeleteMenuResponse:
            type: object
            properties: {}
            description: 删除菜单响应
        DeletePostResponse:
            type: object
            properties: {}
            description: 删除岗位响应
        DeleteRoleResponse:
            type: object
            properties: {}
            description: 删除角色响应
        DeleteUserResponse:
            type: object
            properties: {}
        Dept:
            type: object
            properties:
                id:
                    type: integer
                    description: 部门ID
                    format: uint32
                name:
                    type: string
                    description: 部门名称
                parentId:
                    type: integer
                    description: 父部门ID
                    format: uint32
                leaderId:
                    type: integer
                    description: 部门领导ID
                    format: uint32
                sort:
                    type: integer
                    default: !!float 10
                    description: 排序字段
                    format: int32
                status:
                    enum:
                        - STATUS_UNSPECIFIED
                        - STATUS_ENABLED
                        - STATUS_DISABLED
                    type: string
                    default: !!float 1
                    description: 部门状态 1 启用 2 禁用
                    format: enum
                remark:
                    type: string
                    description: 部门描述
                createdAt:
                    type: string
                    description: 创建时间
                updatedAt:
                    type: string
                    description: 更新时间
            description: 部门信息
        ExistMenuByNameResponse:
            type: object
            properties:
                exist:
                    type: boolean
                    description: 菜单名是否存在
            description: 判断菜单名是否存在响应
        ExistMenuByPathResponse:
            type: object
            properties:
                exist:
                    type: boolean
                    description: 菜单路径是否存在
            description: 判断菜单路径是否存在响应
        ListDeptResponse:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/Dept'
                total:
                    type: integer
                    format: int32
            description: 分页查询部门响应
        ListMenuResponse:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/Menu'
                total:
                    type: integer
                    format: int32
            description: 分页查询菜单响应
        ListMenuTreeResponse:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/Menu'
                    description: 菜单树
            description: 获取菜单树响应
        ListPostResponse:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/Post'
                total:
                    type: integer
                    format: int32
            description: 分页查询岗位响应
        ListRoleResponse:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/Role'
                total:
                    type: integer
                    format: int32
            description: 分页查询角色响应
        ListUserResponse:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/User'
                total:
                    type: integer
                    format: int32
        LoginCode:
            type: object
            properties:
                phone:
                    type: string
                    description: 登录手机号
                code:
                    type: string
                    description: 登录验证码
            description: 登录验证码
        LoginPassword:
            type: object
            properties:
                username:
                    type: string
                    description: 登录用户名
                password:
                    type: string
                    description: 登录密码
            description: 登录密码
        LoginResponse:
            type: object
            properties:
                id:
                    type: integer
                    description: 用户ID
                    format: uint32
                name:
                    type: string
                    description: 用户名
                tokenType:
                    type: string
                    description: 令牌类型
                accessToken:
                    type: string
                    description: 访问令牌
                refreshToken:
                    type: string
                    description: 刷新令牌
                expiresIn:
                    type: string
                    description: 访问令牌过期时间
            description: 用户后台登陆 - 回应
        LogoutRequest:
            type: object
            properties: {}
            description: 用户后台登出 - 请求
        LogoutResponse:
            type: object
            properties: {}
            description: 用户后台登出 - 回应
        Menu:
            type: object
            properties:
                id:
                    type: integer
                    description: 菜单ID
                    format: uint32
                name:
                    type: string
                    description: 菜单名称
                path:
                    type: string
                    description: 路由路径
                authCode:
                    type: string
                    description: 权限标识
                meta:
                    allOf:
                        - $ref: '#/components/schemas/MenuMeta'
                    description: 菜单元数据
                children:
                    type: array
                    items:
                        $ref: '#/components/schemas/Menu'
                    description: 子级
                component:
                    type: string
                    description: 组件
                pid:
                    type: integer
                    description: 父级ID
                    format: uint32
                redirect:
                    type: string
                    description: 重定向
                type:
                    type: integer
                    default: !!float 1
                    description: 菜单类型
                    format: int32
                status:
                    enum:
                        - STATUS_UNSPECIFIED
                        - STATUS_ENABLED
                        - STATUS_DISABLED
                    type: string
                    default: !!float 1
                    description: 菜单状态 1 启用 2 禁用
                    format: enum
                createdAt:
                    type: string
                    description: 创建时间
                updatedAt:
                    type: string
                    description: 更新时间
        MenuMeta:
            type: object
            properties:
                activeIcon:
                    type: string
                    description: 激活时显示的图标
                activePath:
                    type: string
                    description: 作为路由时，需要激活的菜单的Path
                affixTab:
                    type: boolean
                    description: 固定在标签栏
                affixTabOrder:
                    type: integer
                    description: 在标签栏固定的顺序
                    format: int32
                badge:
                    type: string
                    description: 徽标内容(当徽标类型为normal时有效)
                badgeType:
                    type: integer
                    description: 徽标类型
                    format: int32
                badgeVariants:
                    type: integer
                    description: 徽标颜色
                    format: int32
                hideChildrenInMenu:
                    type: boolean
                    description: 在菜单中隐藏下级
                hideInBreadcrumb:
                    type: boolean
                    description: 在面包屑中隐藏
                hideInMenu:
                    type: boolean
                    description: 在菜单中隐藏
                hideInTab:
                    type: boolean
                    description: 在标签栏中隐藏
                icon:
                    type: string
                    description: 菜单图标
                iframeSrc:
                    type: string
                    description: 内嵌Iframe的URL
                keepAlive:
                    type: boolean
                    description: 是否缓存页面
                link:
                    type: string
                    description: 外链页面的URL
                maxNumOfOpenTab:
                    type: integer
                    description: 同一个路由最大打开的标签数
                    format: int32
                noBasicLayout:
                    type: boolean
                    description: 无需基础布局
                openInNewWindow:
                    type: boolean
                    description: 是否在新窗口打开
                order:
                    type: integer
                    default: !!float 10
                    description: 菜单排序
                    format: int32
                query:
                    type: string
                    description: 额外的路由参数
                title:
                    type: string
                    description: 菜单标题
            description: 菜单元数据
        MenusResponse:
            type: object
            properties:
                items:
                    type: array
                    items:
                        $ref: '#/components/schemas/Menu'
                    description: 登录用户菜单列表
            description: 登录用户菜单 - 回应
        Post:
            type: object
            properties:
                id:
                    type: integer
                    description: 岗位ID
                    format: uint32
                name:
                    type: string
                    description: 岗位名称
                status:
                    enum:
                        - STATUS_UNSPECIFIED
                        - STATUS_ENABLED
                        - STATUS_DISABLED
                    type: string
                    default: !!float 1
                    description: 岗位状态
                    format: enum
                sort:
                    type: integer
                    default: !!float 10
                    description: 排序字段
                    format: int32
                remark:
                    type: string
                    description: 岗位描述
                createdAt:
                    type: string
                    description: 创建时间
                updatedAt:
                    type: string
                    description: 更新时间
            description: 岗位信息
        ProfileResponse:
            type: object
            properties:
                user:
                    $ref: '#/components/schemas/User'
                role:
                    $ref: '#/components/schemas/Role'
                roles:
                    type: array
                    items:
                        type: string
                    description: 登录用户角色列表信息
                permissions:
                    type: array
                    items:
                        type: string
                    description: 登录用户权限列表信息
                menus:
                    type: array
                    items:
                        type: string
                    description: 登录用户菜单信息
            description: 登录用户简介信息 - 回应
        RefreshTokenRequest:
            type: object
            properties:
                refreshToken:
                    type: string
                    description: 刷新令牌
            description: 请求 - 刷新令牌
        RefreshTokenResponse:
            type: object
            properties:
                accessToken:
                    type: string
                    description: 新的访问令牌
                refreshToken:
                    type: string
                    description: 新的刷新令牌
                expiresIn:
                    type: string
                    description: 访问令牌过期时间
            description: 回应 - 刷新令牌
        Role:
            type: object
            properties:
                id:
                    type: integer
                    description: 角色ID
                    format: uint32
                name:
                    type: string
                    description: 角色名称
                status:
                    enum:
                        - STATUS_UNSPECIFIED
                        - STATUS_ENABLED
                        - STATUS_DISABLED
                    type: string
                    default: !!float 1
                    description: 角色状态 0 未知 1 启用 2 禁用
                    format: enum
                sort:
                    type: integer
                    default: !!float 10
                    description: 排序字段
                    format: int32
                remark:
                    type: string
                    description: 角色描述
                defaultRouter:
                    type: string
                    description: 默认路由
                menuCheckStrictly:
                    type: integer
                    default: !!float 1
                    description: 菜单树选择项是否关联显示
                    format: int32
                deptCheckStrictly:
                    type: integer
                    default: !!float 1
                    description: 部门树选择项是否关联显示
                    format: int32
                dataScope:
                    type: integer
                    default: !!float 1
                    description: 数据范围
                    format: int32
                createdAt:
                    type: string
                    description: 创建时间
                updatedAt:
                    type: string
                    description: 更新时间
            description: 角色信息
        UpdateDeptResponse:
            type: object
            properties: {}
            description: 更新部门响应
        UpdateMenuResponse:
            type: object
            properties: {}
            description: 更新菜单响应
        UpdatePostResponse:
            type: object
            properties: {}
            description: 更新岗位响应
        UpdateRoleResponse:
            type: object
            properties: {}
            description: 更新角色响应
        UpdateUserResponse:
            type: object
            properties: {}
        User:
            type: object
            properties:
                id:
                    type: integer
                    format: uint32
                name:
                    type: string
                    description: 用户名
                password:
                    type: string
                    description: 密码
                nickname:
                    type: string
                    description: 昵称
                realname:
                    type: string
                    description: 真实姓名
                birthday:
                    type: string
                    description: 生日
                gender:
                    enum:
                        - GENDER_UNSPECIFIED
                        - GENDER_MALE
                        - GENDER_FEMALE
                        - GENDER_OTHER
                    type: string
                    description: 性别 0 未知 1 男 2 女
                    format: enum
                phone:
                    type: string
                    description: 手机号
                email:
                    type: string
                    description: 电子邮箱
                avatar:
                    type: string
                    description: 头像
                status:
                    enum:
                        - STATUS_UNSPECIFIED
                        - STATUS_ENABLED
                        - STATUS_DISABLED
                    type: string
                    description: 状态 0 未知 1 启用 2 禁用
                    format: enum
                createdAt:
                    type: string
                    description: 创建时间
                updatedAt:
                    type: string
                    description: 更新时间
                description:
                    type: string
                    description: 个人说明
        VbenProfileResponse:
            type: object
            properties:
                userId:
                    type: integer
                    description: 用户ID
                    format: uint32
                username:
                    type: string
                    description: 用户名
                realName:
                    type: string
                    description: 真实姓名
                avatar:
                    type: string
                    description: 头像
                homePath:
                    type: string
                    description: 首页路径
                desc:
                    type: string
                    description: 描述
                role:
                    $ref: '#/components/schemas/Role'
                roles:
                    type: array
                    items:
                        type: string
                    description: 登录用户角色列表信息
            description: 登录用户Vben简介信息 - 回应
    securitySchemes:
        BearerAuth:
            type: http
            description: JWT Bearer token for authenticating requests...
            scheme: bearer
            bearerFormat: JWT
tags:
    - name: AuthService
      description: The greeting service definition.
    - name: DeptService
      description: 部门管理服务
    - name: MenuService
      description: 菜单管理服务
    - name: PostService
      description: 岗位管理服务
    - name: RoleService
      description: 角色管理服务
    - name: UserService
      description: 用户管理服务
