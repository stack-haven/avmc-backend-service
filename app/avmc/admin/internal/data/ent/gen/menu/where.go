// Code generated by ent, DO NOT EDIT.

package menu

import (
	"backend-service/app/avmc/admin/internal/data/ent/gen/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id uint32) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uint32) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uint32) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uint32) predicate.Menu {
	return predicate.Menu(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uint32) predicate.Menu {
	return predicate.Menu(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uint32) predicate.Menu {
	return predicate.Menu(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uint32) predicate.Menu {
	return predicate.Menu(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uint32) predicate.Menu {
	return predicate.Menu(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uint32) predicate.Menu {
	return predicate.Menu(sql.FieldLTE(FieldID, id))
}

// Status applies equality check predicate on the "status" field. It's identical to StatusEQ.
func Status(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldStatus, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldUpdatedAt, v))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v time.Time) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldDeletedAt, v))
}

// Name applies equality check predicate on the "name" field. It's identical to NameEQ.
func Name(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldName, v))
}

// Path applies equality check predicate on the "path" field. It's identical to PathEQ.
func Path(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldPath, v))
}

// Type applies equality check predicate on the "type" field. It's identical to TypeEQ.
func Type(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldType, v))
}

// Component applies equality check predicate on the "component" field. It's identical to ComponentEQ.
func Component(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldComponent, v))
}

// ParentID applies equality check predicate on the "parent_id" field. It's identical to ParentIDEQ.
func ParentID(v uint32) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldParentID, v))
}

// Redirect applies equality check predicate on the "redirect" field. It's identical to RedirectEQ.
func Redirect(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldRedirect, v))
}

// AuthCode applies equality check predicate on the "auth_code" field. It's identical to AuthCodeEQ.
func AuthCode(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldAuthCode, v))
}

// ActiveIcon applies equality check predicate on the "active_icon" field. It's identical to ActiveIconEQ.
func ActiveIcon(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldActiveIcon, v))
}

// ActivePath applies equality check predicate on the "active_path" field. It's identical to ActivePathEQ.
func ActivePath(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldActivePath, v))
}

// AffixTab applies equality check predicate on the "affix_tab" field. It's identical to AffixTabEQ.
func AffixTab(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldAffixTab, v))
}

// AffixTabOrder applies equality check predicate on the "affix_tab_order" field. It's identical to AffixTabOrderEQ.
func AffixTabOrder(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldAffixTabOrder, v))
}

// Badge applies equality check predicate on the "badge" field. It's identical to BadgeEQ.
func Badge(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldBadge, v))
}

// BadgeType applies equality check predicate on the "badge_type" field. It's identical to BadgeTypeEQ.
func BadgeType(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldBadgeType, v))
}

// BadgeVariants applies equality check predicate on the "badge_variants" field. It's identical to BadgeVariantsEQ.
func BadgeVariants(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldBadgeVariants, v))
}

// HideChildrenInMenu applies equality check predicate on the "hide_children_in_menu" field. It's identical to HideChildrenInMenuEQ.
func HideChildrenInMenu(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldHideChildrenInMenu, v))
}

// HideInBreadcrumb applies equality check predicate on the "hide_in_breadcrumb" field. It's identical to HideInBreadcrumbEQ.
func HideInBreadcrumb(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldHideInBreadcrumb, v))
}

// HideInMenu applies equality check predicate on the "hide_in_menu" field. It's identical to HideInMenuEQ.
func HideInMenu(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldHideInMenu, v))
}

// HideInTab applies equality check predicate on the "hide_in_tab" field. It's identical to HideInTabEQ.
func HideInTab(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldHideInTab, v))
}

// Icon applies equality check predicate on the "icon" field. It's identical to IconEQ.
func Icon(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldIcon, v))
}

// IframeSrc applies equality check predicate on the "iframe_src" field. It's identical to IframeSrcEQ.
func IframeSrc(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldIframeSrc, v))
}

// KeepAlive applies equality check predicate on the "keep_alive" field. It's identical to KeepAliveEQ.
func KeepAlive(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldKeepAlive, v))
}

// Link applies equality check predicate on the "link" field. It's identical to LinkEQ.
func Link(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldLink, v))
}

// MaxNumOfOpenTab applies equality check predicate on the "max_num_of_open_tab" field. It's identical to MaxNumOfOpenTabEQ.
func MaxNumOfOpenTab(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldMaxNumOfOpenTab, v))
}

// NoBasicLayout applies equality check predicate on the "no_basic_layout" field. It's identical to NoBasicLayoutEQ.
func NoBasicLayout(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldNoBasicLayout, v))
}

// OpenInNewWindow applies equality check predicate on the "open_in_new_window" field. It's identical to OpenInNewWindowEQ.
func OpenInNewWindow(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldOpenInNewWindow, v))
}

// Sort applies equality check predicate on the "sort" field. It's identical to SortEQ.
func Sort(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldSort, v))
}

// Query applies equality check predicate on the "query" field. It's identical to QueryEQ.
func Query(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldQuery, v))
}

// Title applies equality check predicate on the "title" field. It's identical to TitleEQ.
func Title(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldTitle, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...int32) predicate.Menu {
	return predicate.Menu(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...int32) predicate.Menu {
	return predicate.Menu(sql.FieldNotIn(FieldStatus, vs...))
}

// StatusGT applies the GT predicate on the "status" field.
func StatusGT(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldGT(FieldStatus, v))
}

// StatusGTE applies the GTE predicate on the "status" field.
func StatusGTE(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldGTE(FieldStatus, v))
}

// StatusLT applies the LT predicate on the "status" field.
func StatusLT(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldLT(FieldStatus, v))
}

// StatusLTE applies the LTE predicate on the "status" field.
func StatusLTE(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldLTE(FieldStatus, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.Menu {
	return predicate.Menu(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.Menu {
	return predicate.Menu(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.Menu {
	return predicate.Menu(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.Menu {
	return predicate.Menu(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.Menu {
	return predicate.Menu(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.Menu {
	return predicate.Menu(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.Menu {
	return predicate.Menu(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.Menu {
	return predicate.Menu(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.Menu {
	return predicate.Menu(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.Menu {
	return predicate.Menu(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.Menu {
	return predicate.Menu(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.Menu {
	return predicate.Menu(sql.FieldLTE(FieldUpdatedAt, v))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v time.Time) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v time.Time) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...time.Time) predicate.Menu {
	return predicate.Menu(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...time.Time) predicate.Menu {
	return predicate.Menu(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v time.Time) predicate.Menu {
	return predicate.Menu(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v time.Time) predicate.Menu {
	return predicate.Menu(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v time.Time) predicate.Menu {
	return predicate.Menu(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v time.Time) predicate.Menu {
	return predicate.Menu(sql.FieldLTE(FieldDeletedAt, v))
}

// DeletedAtIsNil applies the IsNil predicate on the "deleted_at" field.
func DeletedAtIsNil() predicate.Menu {
	return predicate.Menu(sql.FieldIsNull(FieldDeletedAt))
}

// DeletedAtNotNil applies the NotNil predicate on the "deleted_at" field.
func DeletedAtNotNil() predicate.Menu {
	return predicate.Menu(sql.FieldNotNull(FieldDeletedAt))
}

// NameEQ applies the EQ predicate on the "name" field.
func NameEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldName, v))
}

// NameNEQ applies the NEQ predicate on the "name" field.
func NameNEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldName, v))
}

// NameIn applies the In predicate on the "name" field.
func NameIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldIn(FieldName, vs...))
}

// NameNotIn applies the NotIn predicate on the "name" field.
func NameNotIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldNotIn(FieldName, vs...))
}

// NameGT applies the GT predicate on the "name" field.
func NameGT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGT(FieldName, v))
}

// NameGTE applies the GTE predicate on the "name" field.
func NameGTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGTE(FieldName, v))
}

// NameLT applies the LT predicate on the "name" field.
func NameLT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLT(FieldName, v))
}

// NameLTE applies the LTE predicate on the "name" field.
func NameLTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLTE(FieldName, v))
}

// NameContains applies the Contains predicate on the "name" field.
func NameContains(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContains(FieldName, v))
}

// NameHasPrefix applies the HasPrefix predicate on the "name" field.
func NameHasPrefix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasPrefix(FieldName, v))
}

// NameHasSuffix applies the HasSuffix predicate on the "name" field.
func NameHasSuffix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasSuffix(FieldName, v))
}

// NameEqualFold applies the EqualFold predicate on the "name" field.
func NameEqualFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEqualFold(FieldName, v))
}

// NameContainsFold applies the ContainsFold predicate on the "name" field.
func NameContainsFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContainsFold(FieldName, v))
}

// PathEQ applies the EQ predicate on the "path" field.
func PathEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldPath, v))
}

// PathNEQ applies the NEQ predicate on the "path" field.
func PathNEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldPath, v))
}

// PathIn applies the In predicate on the "path" field.
func PathIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldIn(FieldPath, vs...))
}

// PathNotIn applies the NotIn predicate on the "path" field.
func PathNotIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldNotIn(FieldPath, vs...))
}

// PathGT applies the GT predicate on the "path" field.
func PathGT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGT(FieldPath, v))
}

// PathGTE applies the GTE predicate on the "path" field.
func PathGTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGTE(FieldPath, v))
}

// PathLT applies the LT predicate on the "path" field.
func PathLT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLT(FieldPath, v))
}

// PathLTE applies the LTE predicate on the "path" field.
func PathLTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLTE(FieldPath, v))
}

// PathContains applies the Contains predicate on the "path" field.
func PathContains(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContains(FieldPath, v))
}

// PathHasPrefix applies the HasPrefix predicate on the "path" field.
func PathHasPrefix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasPrefix(FieldPath, v))
}

// PathHasSuffix applies the HasSuffix predicate on the "path" field.
func PathHasSuffix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasSuffix(FieldPath, v))
}

// PathIsNil applies the IsNil predicate on the "path" field.
func PathIsNil() predicate.Menu {
	return predicate.Menu(sql.FieldIsNull(FieldPath))
}

// PathNotNil applies the NotNil predicate on the "path" field.
func PathNotNil() predicate.Menu {
	return predicate.Menu(sql.FieldNotNull(FieldPath))
}

// PathEqualFold applies the EqualFold predicate on the "path" field.
func PathEqualFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEqualFold(FieldPath, v))
}

// PathContainsFold applies the ContainsFold predicate on the "path" field.
func PathContainsFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContainsFold(FieldPath, v))
}

// TypeEQ applies the EQ predicate on the "type" field.
func TypeEQ(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldType, v))
}

// TypeNEQ applies the NEQ predicate on the "type" field.
func TypeNEQ(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldType, v))
}

// TypeIn applies the In predicate on the "type" field.
func TypeIn(vs ...int32) predicate.Menu {
	return predicate.Menu(sql.FieldIn(FieldType, vs...))
}

// TypeNotIn applies the NotIn predicate on the "type" field.
func TypeNotIn(vs ...int32) predicate.Menu {
	return predicate.Menu(sql.FieldNotIn(FieldType, vs...))
}

// TypeGT applies the GT predicate on the "type" field.
func TypeGT(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldGT(FieldType, v))
}

// TypeGTE applies the GTE predicate on the "type" field.
func TypeGTE(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldGTE(FieldType, v))
}

// TypeLT applies the LT predicate on the "type" field.
func TypeLT(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldLT(FieldType, v))
}

// TypeLTE applies the LTE predicate on the "type" field.
func TypeLTE(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldLTE(FieldType, v))
}

// TypeIsNil applies the IsNil predicate on the "type" field.
func TypeIsNil() predicate.Menu {
	return predicate.Menu(sql.FieldIsNull(FieldType))
}

// TypeNotNil applies the NotNil predicate on the "type" field.
func TypeNotNil() predicate.Menu {
	return predicate.Menu(sql.FieldNotNull(FieldType))
}

// ComponentEQ applies the EQ predicate on the "component" field.
func ComponentEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldComponent, v))
}

// ComponentNEQ applies the NEQ predicate on the "component" field.
func ComponentNEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldComponent, v))
}

// ComponentIn applies the In predicate on the "component" field.
func ComponentIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldIn(FieldComponent, vs...))
}

// ComponentNotIn applies the NotIn predicate on the "component" field.
func ComponentNotIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldNotIn(FieldComponent, vs...))
}

// ComponentGT applies the GT predicate on the "component" field.
func ComponentGT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGT(FieldComponent, v))
}

// ComponentGTE applies the GTE predicate on the "component" field.
func ComponentGTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGTE(FieldComponent, v))
}

// ComponentLT applies the LT predicate on the "component" field.
func ComponentLT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLT(FieldComponent, v))
}

// ComponentLTE applies the LTE predicate on the "component" field.
func ComponentLTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLTE(FieldComponent, v))
}

// ComponentContains applies the Contains predicate on the "component" field.
func ComponentContains(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContains(FieldComponent, v))
}

// ComponentHasPrefix applies the HasPrefix predicate on the "component" field.
func ComponentHasPrefix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasPrefix(FieldComponent, v))
}

// ComponentHasSuffix applies the HasSuffix predicate on the "component" field.
func ComponentHasSuffix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasSuffix(FieldComponent, v))
}

// ComponentIsNil applies the IsNil predicate on the "component" field.
func ComponentIsNil() predicate.Menu {
	return predicate.Menu(sql.FieldIsNull(FieldComponent))
}

// ComponentNotNil applies the NotNil predicate on the "component" field.
func ComponentNotNil() predicate.Menu {
	return predicate.Menu(sql.FieldNotNull(FieldComponent))
}

// ComponentEqualFold applies the EqualFold predicate on the "component" field.
func ComponentEqualFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEqualFold(FieldComponent, v))
}

// ComponentContainsFold applies the ContainsFold predicate on the "component" field.
func ComponentContainsFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContainsFold(FieldComponent, v))
}

// ParentIDEQ applies the EQ predicate on the "parent_id" field.
func ParentIDEQ(v uint32) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldParentID, v))
}

// ParentIDNEQ applies the NEQ predicate on the "parent_id" field.
func ParentIDNEQ(v uint32) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldParentID, v))
}

// ParentIDIn applies the In predicate on the "parent_id" field.
func ParentIDIn(vs ...uint32) predicate.Menu {
	return predicate.Menu(sql.FieldIn(FieldParentID, vs...))
}

// ParentIDNotIn applies the NotIn predicate on the "parent_id" field.
func ParentIDNotIn(vs ...uint32) predicate.Menu {
	return predicate.Menu(sql.FieldNotIn(FieldParentID, vs...))
}

// ParentIDIsNil applies the IsNil predicate on the "parent_id" field.
func ParentIDIsNil() predicate.Menu {
	return predicate.Menu(sql.FieldIsNull(FieldParentID))
}

// ParentIDNotNil applies the NotNil predicate on the "parent_id" field.
func ParentIDNotNil() predicate.Menu {
	return predicate.Menu(sql.FieldNotNull(FieldParentID))
}

// RedirectEQ applies the EQ predicate on the "redirect" field.
func RedirectEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldRedirect, v))
}

// RedirectNEQ applies the NEQ predicate on the "redirect" field.
func RedirectNEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldRedirect, v))
}

// RedirectIn applies the In predicate on the "redirect" field.
func RedirectIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldIn(FieldRedirect, vs...))
}

// RedirectNotIn applies the NotIn predicate on the "redirect" field.
func RedirectNotIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldNotIn(FieldRedirect, vs...))
}

// RedirectGT applies the GT predicate on the "redirect" field.
func RedirectGT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGT(FieldRedirect, v))
}

// RedirectGTE applies the GTE predicate on the "redirect" field.
func RedirectGTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGTE(FieldRedirect, v))
}

// RedirectLT applies the LT predicate on the "redirect" field.
func RedirectLT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLT(FieldRedirect, v))
}

// RedirectLTE applies the LTE predicate on the "redirect" field.
func RedirectLTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLTE(FieldRedirect, v))
}

// RedirectContains applies the Contains predicate on the "redirect" field.
func RedirectContains(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContains(FieldRedirect, v))
}

// RedirectHasPrefix applies the HasPrefix predicate on the "redirect" field.
func RedirectHasPrefix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasPrefix(FieldRedirect, v))
}

// RedirectHasSuffix applies the HasSuffix predicate on the "redirect" field.
func RedirectHasSuffix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasSuffix(FieldRedirect, v))
}

// RedirectIsNil applies the IsNil predicate on the "redirect" field.
func RedirectIsNil() predicate.Menu {
	return predicate.Menu(sql.FieldIsNull(FieldRedirect))
}

// RedirectNotNil applies the NotNil predicate on the "redirect" field.
func RedirectNotNil() predicate.Menu {
	return predicate.Menu(sql.FieldNotNull(FieldRedirect))
}

// RedirectEqualFold applies the EqualFold predicate on the "redirect" field.
func RedirectEqualFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEqualFold(FieldRedirect, v))
}

// RedirectContainsFold applies the ContainsFold predicate on the "redirect" field.
func RedirectContainsFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContainsFold(FieldRedirect, v))
}

// AuthCodeEQ applies the EQ predicate on the "auth_code" field.
func AuthCodeEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldAuthCode, v))
}

// AuthCodeNEQ applies the NEQ predicate on the "auth_code" field.
func AuthCodeNEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldAuthCode, v))
}

// AuthCodeIn applies the In predicate on the "auth_code" field.
func AuthCodeIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldIn(FieldAuthCode, vs...))
}

// AuthCodeNotIn applies the NotIn predicate on the "auth_code" field.
func AuthCodeNotIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldNotIn(FieldAuthCode, vs...))
}

// AuthCodeGT applies the GT predicate on the "auth_code" field.
func AuthCodeGT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGT(FieldAuthCode, v))
}

// AuthCodeGTE applies the GTE predicate on the "auth_code" field.
func AuthCodeGTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGTE(FieldAuthCode, v))
}

// AuthCodeLT applies the LT predicate on the "auth_code" field.
func AuthCodeLT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLT(FieldAuthCode, v))
}

// AuthCodeLTE applies the LTE predicate on the "auth_code" field.
func AuthCodeLTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLTE(FieldAuthCode, v))
}

// AuthCodeContains applies the Contains predicate on the "auth_code" field.
func AuthCodeContains(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContains(FieldAuthCode, v))
}

// AuthCodeHasPrefix applies the HasPrefix predicate on the "auth_code" field.
func AuthCodeHasPrefix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasPrefix(FieldAuthCode, v))
}

// AuthCodeHasSuffix applies the HasSuffix predicate on the "auth_code" field.
func AuthCodeHasSuffix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasSuffix(FieldAuthCode, v))
}

// AuthCodeEqualFold applies the EqualFold predicate on the "auth_code" field.
func AuthCodeEqualFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEqualFold(FieldAuthCode, v))
}

// AuthCodeContainsFold applies the ContainsFold predicate on the "auth_code" field.
func AuthCodeContainsFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContainsFold(FieldAuthCode, v))
}

// ActiveIconEQ applies the EQ predicate on the "active_icon" field.
func ActiveIconEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldActiveIcon, v))
}

// ActiveIconNEQ applies the NEQ predicate on the "active_icon" field.
func ActiveIconNEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldActiveIcon, v))
}

// ActiveIconIn applies the In predicate on the "active_icon" field.
func ActiveIconIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldIn(FieldActiveIcon, vs...))
}

// ActiveIconNotIn applies the NotIn predicate on the "active_icon" field.
func ActiveIconNotIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldNotIn(FieldActiveIcon, vs...))
}

// ActiveIconGT applies the GT predicate on the "active_icon" field.
func ActiveIconGT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGT(FieldActiveIcon, v))
}

// ActiveIconGTE applies the GTE predicate on the "active_icon" field.
func ActiveIconGTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGTE(FieldActiveIcon, v))
}

// ActiveIconLT applies the LT predicate on the "active_icon" field.
func ActiveIconLT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLT(FieldActiveIcon, v))
}

// ActiveIconLTE applies the LTE predicate on the "active_icon" field.
func ActiveIconLTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLTE(FieldActiveIcon, v))
}

// ActiveIconContains applies the Contains predicate on the "active_icon" field.
func ActiveIconContains(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContains(FieldActiveIcon, v))
}

// ActiveIconHasPrefix applies the HasPrefix predicate on the "active_icon" field.
func ActiveIconHasPrefix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasPrefix(FieldActiveIcon, v))
}

// ActiveIconHasSuffix applies the HasSuffix predicate on the "active_icon" field.
func ActiveIconHasSuffix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasSuffix(FieldActiveIcon, v))
}

// ActiveIconEqualFold applies the EqualFold predicate on the "active_icon" field.
func ActiveIconEqualFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEqualFold(FieldActiveIcon, v))
}

// ActiveIconContainsFold applies the ContainsFold predicate on the "active_icon" field.
func ActiveIconContainsFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContainsFold(FieldActiveIcon, v))
}

// ActivePathEQ applies the EQ predicate on the "active_path" field.
func ActivePathEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldActivePath, v))
}

// ActivePathNEQ applies the NEQ predicate on the "active_path" field.
func ActivePathNEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldActivePath, v))
}

// ActivePathIn applies the In predicate on the "active_path" field.
func ActivePathIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldIn(FieldActivePath, vs...))
}

// ActivePathNotIn applies the NotIn predicate on the "active_path" field.
func ActivePathNotIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldNotIn(FieldActivePath, vs...))
}

// ActivePathGT applies the GT predicate on the "active_path" field.
func ActivePathGT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGT(FieldActivePath, v))
}

// ActivePathGTE applies the GTE predicate on the "active_path" field.
func ActivePathGTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGTE(FieldActivePath, v))
}

// ActivePathLT applies the LT predicate on the "active_path" field.
func ActivePathLT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLT(FieldActivePath, v))
}

// ActivePathLTE applies the LTE predicate on the "active_path" field.
func ActivePathLTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLTE(FieldActivePath, v))
}

// ActivePathContains applies the Contains predicate on the "active_path" field.
func ActivePathContains(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContains(FieldActivePath, v))
}

// ActivePathHasPrefix applies the HasPrefix predicate on the "active_path" field.
func ActivePathHasPrefix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasPrefix(FieldActivePath, v))
}

// ActivePathHasSuffix applies the HasSuffix predicate on the "active_path" field.
func ActivePathHasSuffix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasSuffix(FieldActivePath, v))
}

// ActivePathEqualFold applies the EqualFold predicate on the "active_path" field.
func ActivePathEqualFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEqualFold(FieldActivePath, v))
}

// ActivePathContainsFold applies the ContainsFold predicate on the "active_path" field.
func ActivePathContainsFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContainsFold(FieldActivePath, v))
}

// AffixTabEQ applies the EQ predicate on the "affix_tab" field.
func AffixTabEQ(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldAffixTab, v))
}

// AffixTabNEQ applies the NEQ predicate on the "affix_tab" field.
func AffixTabNEQ(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldAffixTab, v))
}

// AffixTabOrderEQ applies the EQ predicate on the "affix_tab_order" field.
func AffixTabOrderEQ(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldAffixTabOrder, v))
}

// AffixTabOrderNEQ applies the NEQ predicate on the "affix_tab_order" field.
func AffixTabOrderNEQ(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldAffixTabOrder, v))
}

// AffixTabOrderIn applies the In predicate on the "affix_tab_order" field.
func AffixTabOrderIn(vs ...int32) predicate.Menu {
	return predicate.Menu(sql.FieldIn(FieldAffixTabOrder, vs...))
}

// AffixTabOrderNotIn applies the NotIn predicate on the "affix_tab_order" field.
func AffixTabOrderNotIn(vs ...int32) predicate.Menu {
	return predicate.Menu(sql.FieldNotIn(FieldAffixTabOrder, vs...))
}

// AffixTabOrderGT applies the GT predicate on the "affix_tab_order" field.
func AffixTabOrderGT(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldGT(FieldAffixTabOrder, v))
}

// AffixTabOrderGTE applies the GTE predicate on the "affix_tab_order" field.
func AffixTabOrderGTE(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldGTE(FieldAffixTabOrder, v))
}

// AffixTabOrderLT applies the LT predicate on the "affix_tab_order" field.
func AffixTabOrderLT(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldLT(FieldAffixTabOrder, v))
}

// AffixTabOrderLTE applies the LTE predicate on the "affix_tab_order" field.
func AffixTabOrderLTE(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldLTE(FieldAffixTabOrder, v))
}

// BadgeEQ applies the EQ predicate on the "badge" field.
func BadgeEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldBadge, v))
}

// BadgeNEQ applies the NEQ predicate on the "badge" field.
func BadgeNEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldBadge, v))
}

// BadgeIn applies the In predicate on the "badge" field.
func BadgeIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldIn(FieldBadge, vs...))
}

// BadgeNotIn applies the NotIn predicate on the "badge" field.
func BadgeNotIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldNotIn(FieldBadge, vs...))
}

// BadgeGT applies the GT predicate on the "badge" field.
func BadgeGT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGT(FieldBadge, v))
}

// BadgeGTE applies the GTE predicate on the "badge" field.
func BadgeGTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGTE(FieldBadge, v))
}

// BadgeLT applies the LT predicate on the "badge" field.
func BadgeLT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLT(FieldBadge, v))
}

// BadgeLTE applies the LTE predicate on the "badge" field.
func BadgeLTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLTE(FieldBadge, v))
}

// BadgeContains applies the Contains predicate on the "badge" field.
func BadgeContains(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContains(FieldBadge, v))
}

// BadgeHasPrefix applies the HasPrefix predicate on the "badge" field.
func BadgeHasPrefix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasPrefix(FieldBadge, v))
}

// BadgeHasSuffix applies the HasSuffix predicate on the "badge" field.
func BadgeHasSuffix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasSuffix(FieldBadge, v))
}

// BadgeEqualFold applies the EqualFold predicate on the "badge" field.
func BadgeEqualFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEqualFold(FieldBadge, v))
}

// BadgeContainsFold applies the ContainsFold predicate on the "badge" field.
func BadgeContainsFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContainsFold(FieldBadge, v))
}

// BadgeTypeEQ applies the EQ predicate on the "badge_type" field.
func BadgeTypeEQ(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldBadgeType, v))
}

// BadgeTypeNEQ applies the NEQ predicate on the "badge_type" field.
func BadgeTypeNEQ(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldBadgeType, v))
}

// BadgeTypeIn applies the In predicate on the "badge_type" field.
func BadgeTypeIn(vs ...int32) predicate.Menu {
	return predicate.Menu(sql.FieldIn(FieldBadgeType, vs...))
}

// BadgeTypeNotIn applies the NotIn predicate on the "badge_type" field.
func BadgeTypeNotIn(vs ...int32) predicate.Menu {
	return predicate.Menu(sql.FieldNotIn(FieldBadgeType, vs...))
}

// BadgeTypeGT applies the GT predicate on the "badge_type" field.
func BadgeTypeGT(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldGT(FieldBadgeType, v))
}

// BadgeTypeGTE applies the GTE predicate on the "badge_type" field.
func BadgeTypeGTE(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldGTE(FieldBadgeType, v))
}

// BadgeTypeLT applies the LT predicate on the "badge_type" field.
func BadgeTypeLT(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldLT(FieldBadgeType, v))
}

// BadgeTypeLTE applies the LTE predicate on the "badge_type" field.
func BadgeTypeLTE(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldLTE(FieldBadgeType, v))
}

// BadgeVariantsEQ applies the EQ predicate on the "badge_variants" field.
func BadgeVariantsEQ(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldBadgeVariants, v))
}

// BadgeVariantsNEQ applies the NEQ predicate on the "badge_variants" field.
func BadgeVariantsNEQ(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldBadgeVariants, v))
}

// BadgeVariantsIn applies the In predicate on the "badge_variants" field.
func BadgeVariantsIn(vs ...int32) predicate.Menu {
	return predicate.Menu(sql.FieldIn(FieldBadgeVariants, vs...))
}

// BadgeVariantsNotIn applies the NotIn predicate on the "badge_variants" field.
func BadgeVariantsNotIn(vs ...int32) predicate.Menu {
	return predicate.Menu(sql.FieldNotIn(FieldBadgeVariants, vs...))
}

// BadgeVariantsGT applies the GT predicate on the "badge_variants" field.
func BadgeVariantsGT(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldGT(FieldBadgeVariants, v))
}

// BadgeVariantsGTE applies the GTE predicate on the "badge_variants" field.
func BadgeVariantsGTE(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldGTE(FieldBadgeVariants, v))
}

// BadgeVariantsLT applies the LT predicate on the "badge_variants" field.
func BadgeVariantsLT(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldLT(FieldBadgeVariants, v))
}

// BadgeVariantsLTE applies the LTE predicate on the "badge_variants" field.
func BadgeVariantsLTE(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldLTE(FieldBadgeVariants, v))
}

// HideChildrenInMenuEQ applies the EQ predicate on the "hide_children_in_menu" field.
func HideChildrenInMenuEQ(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldHideChildrenInMenu, v))
}

// HideChildrenInMenuNEQ applies the NEQ predicate on the "hide_children_in_menu" field.
func HideChildrenInMenuNEQ(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldHideChildrenInMenu, v))
}

// HideInBreadcrumbEQ applies the EQ predicate on the "hide_in_breadcrumb" field.
func HideInBreadcrumbEQ(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldHideInBreadcrumb, v))
}

// HideInBreadcrumbNEQ applies the NEQ predicate on the "hide_in_breadcrumb" field.
func HideInBreadcrumbNEQ(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldHideInBreadcrumb, v))
}

// HideInMenuEQ applies the EQ predicate on the "hide_in_menu" field.
func HideInMenuEQ(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldHideInMenu, v))
}

// HideInMenuNEQ applies the NEQ predicate on the "hide_in_menu" field.
func HideInMenuNEQ(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldHideInMenu, v))
}

// HideInTabEQ applies the EQ predicate on the "hide_in_tab" field.
func HideInTabEQ(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldHideInTab, v))
}

// HideInTabNEQ applies the NEQ predicate on the "hide_in_tab" field.
func HideInTabNEQ(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldHideInTab, v))
}

// IconEQ applies the EQ predicate on the "icon" field.
func IconEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldIcon, v))
}

// IconNEQ applies the NEQ predicate on the "icon" field.
func IconNEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldIcon, v))
}

// IconIn applies the In predicate on the "icon" field.
func IconIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldIn(FieldIcon, vs...))
}

// IconNotIn applies the NotIn predicate on the "icon" field.
func IconNotIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldNotIn(FieldIcon, vs...))
}

// IconGT applies the GT predicate on the "icon" field.
func IconGT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGT(FieldIcon, v))
}

// IconGTE applies the GTE predicate on the "icon" field.
func IconGTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGTE(FieldIcon, v))
}

// IconLT applies the LT predicate on the "icon" field.
func IconLT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLT(FieldIcon, v))
}

// IconLTE applies the LTE predicate on the "icon" field.
func IconLTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLTE(FieldIcon, v))
}

// IconContains applies the Contains predicate on the "icon" field.
func IconContains(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContains(FieldIcon, v))
}

// IconHasPrefix applies the HasPrefix predicate on the "icon" field.
func IconHasPrefix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasPrefix(FieldIcon, v))
}

// IconHasSuffix applies the HasSuffix predicate on the "icon" field.
func IconHasSuffix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasSuffix(FieldIcon, v))
}

// IconEqualFold applies the EqualFold predicate on the "icon" field.
func IconEqualFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEqualFold(FieldIcon, v))
}

// IconContainsFold applies the ContainsFold predicate on the "icon" field.
func IconContainsFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContainsFold(FieldIcon, v))
}

// IframeSrcEQ applies the EQ predicate on the "iframe_src" field.
func IframeSrcEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldIframeSrc, v))
}

// IframeSrcNEQ applies the NEQ predicate on the "iframe_src" field.
func IframeSrcNEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldIframeSrc, v))
}

// IframeSrcIn applies the In predicate on the "iframe_src" field.
func IframeSrcIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldIn(FieldIframeSrc, vs...))
}

// IframeSrcNotIn applies the NotIn predicate on the "iframe_src" field.
func IframeSrcNotIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldNotIn(FieldIframeSrc, vs...))
}

// IframeSrcGT applies the GT predicate on the "iframe_src" field.
func IframeSrcGT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGT(FieldIframeSrc, v))
}

// IframeSrcGTE applies the GTE predicate on the "iframe_src" field.
func IframeSrcGTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGTE(FieldIframeSrc, v))
}

// IframeSrcLT applies the LT predicate on the "iframe_src" field.
func IframeSrcLT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLT(FieldIframeSrc, v))
}

// IframeSrcLTE applies the LTE predicate on the "iframe_src" field.
func IframeSrcLTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLTE(FieldIframeSrc, v))
}

// IframeSrcContains applies the Contains predicate on the "iframe_src" field.
func IframeSrcContains(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContains(FieldIframeSrc, v))
}

// IframeSrcHasPrefix applies the HasPrefix predicate on the "iframe_src" field.
func IframeSrcHasPrefix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasPrefix(FieldIframeSrc, v))
}

// IframeSrcHasSuffix applies the HasSuffix predicate on the "iframe_src" field.
func IframeSrcHasSuffix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasSuffix(FieldIframeSrc, v))
}

// IframeSrcEqualFold applies the EqualFold predicate on the "iframe_src" field.
func IframeSrcEqualFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEqualFold(FieldIframeSrc, v))
}

// IframeSrcContainsFold applies the ContainsFold predicate on the "iframe_src" field.
func IframeSrcContainsFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContainsFold(FieldIframeSrc, v))
}

// KeepAliveEQ applies the EQ predicate on the "keep_alive" field.
func KeepAliveEQ(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldKeepAlive, v))
}

// KeepAliveNEQ applies the NEQ predicate on the "keep_alive" field.
func KeepAliveNEQ(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldKeepAlive, v))
}

// LinkEQ applies the EQ predicate on the "link" field.
func LinkEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldLink, v))
}

// LinkNEQ applies the NEQ predicate on the "link" field.
func LinkNEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldLink, v))
}

// LinkIn applies the In predicate on the "link" field.
func LinkIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldIn(FieldLink, vs...))
}

// LinkNotIn applies the NotIn predicate on the "link" field.
func LinkNotIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldNotIn(FieldLink, vs...))
}

// LinkGT applies the GT predicate on the "link" field.
func LinkGT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGT(FieldLink, v))
}

// LinkGTE applies the GTE predicate on the "link" field.
func LinkGTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGTE(FieldLink, v))
}

// LinkLT applies the LT predicate on the "link" field.
func LinkLT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLT(FieldLink, v))
}

// LinkLTE applies the LTE predicate on the "link" field.
func LinkLTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLTE(FieldLink, v))
}

// LinkContains applies the Contains predicate on the "link" field.
func LinkContains(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContains(FieldLink, v))
}

// LinkHasPrefix applies the HasPrefix predicate on the "link" field.
func LinkHasPrefix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasPrefix(FieldLink, v))
}

// LinkHasSuffix applies the HasSuffix predicate on the "link" field.
func LinkHasSuffix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasSuffix(FieldLink, v))
}

// LinkEqualFold applies the EqualFold predicate on the "link" field.
func LinkEqualFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEqualFold(FieldLink, v))
}

// LinkContainsFold applies the ContainsFold predicate on the "link" field.
func LinkContainsFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContainsFold(FieldLink, v))
}

// MaxNumOfOpenTabEQ applies the EQ predicate on the "max_num_of_open_tab" field.
func MaxNumOfOpenTabEQ(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldMaxNumOfOpenTab, v))
}

// MaxNumOfOpenTabNEQ applies the NEQ predicate on the "max_num_of_open_tab" field.
func MaxNumOfOpenTabNEQ(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldMaxNumOfOpenTab, v))
}

// MaxNumOfOpenTabIn applies the In predicate on the "max_num_of_open_tab" field.
func MaxNumOfOpenTabIn(vs ...int32) predicate.Menu {
	return predicate.Menu(sql.FieldIn(FieldMaxNumOfOpenTab, vs...))
}

// MaxNumOfOpenTabNotIn applies the NotIn predicate on the "max_num_of_open_tab" field.
func MaxNumOfOpenTabNotIn(vs ...int32) predicate.Menu {
	return predicate.Menu(sql.FieldNotIn(FieldMaxNumOfOpenTab, vs...))
}

// MaxNumOfOpenTabGT applies the GT predicate on the "max_num_of_open_tab" field.
func MaxNumOfOpenTabGT(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldGT(FieldMaxNumOfOpenTab, v))
}

// MaxNumOfOpenTabGTE applies the GTE predicate on the "max_num_of_open_tab" field.
func MaxNumOfOpenTabGTE(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldGTE(FieldMaxNumOfOpenTab, v))
}

// MaxNumOfOpenTabLT applies the LT predicate on the "max_num_of_open_tab" field.
func MaxNumOfOpenTabLT(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldLT(FieldMaxNumOfOpenTab, v))
}

// MaxNumOfOpenTabLTE applies the LTE predicate on the "max_num_of_open_tab" field.
func MaxNumOfOpenTabLTE(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldLTE(FieldMaxNumOfOpenTab, v))
}

// NoBasicLayoutEQ applies the EQ predicate on the "no_basic_layout" field.
func NoBasicLayoutEQ(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldNoBasicLayout, v))
}

// NoBasicLayoutNEQ applies the NEQ predicate on the "no_basic_layout" field.
func NoBasicLayoutNEQ(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldNoBasicLayout, v))
}

// OpenInNewWindowEQ applies the EQ predicate on the "open_in_new_window" field.
func OpenInNewWindowEQ(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldOpenInNewWindow, v))
}

// OpenInNewWindowNEQ applies the NEQ predicate on the "open_in_new_window" field.
func OpenInNewWindowNEQ(v bool) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldOpenInNewWindow, v))
}

// SortEQ applies the EQ predicate on the "sort" field.
func SortEQ(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldSort, v))
}

// SortNEQ applies the NEQ predicate on the "sort" field.
func SortNEQ(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldSort, v))
}

// SortIn applies the In predicate on the "sort" field.
func SortIn(vs ...int32) predicate.Menu {
	return predicate.Menu(sql.FieldIn(FieldSort, vs...))
}

// SortNotIn applies the NotIn predicate on the "sort" field.
func SortNotIn(vs ...int32) predicate.Menu {
	return predicate.Menu(sql.FieldNotIn(FieldSort, vs...))
}

// SortGT applies the GT predicate on the "sort" field.
func SortGT(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldGT(FieldSort, v))
}

// SortGTE applies the GTE predicate on the "sort" field.
func SortGTE(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldGTE(FieldSort, v))
}

// SortLT applies the LT predicate on the "sort" field.
func SortLT(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldLT(FieldSort, v))
}

// SortLTE applies the LTE predicate on the "sort" field.
func SortLTE(v int32) predicate.Menu {
	return predicate.Menu(sql.FieldLTE(FieldSort, v))
}

// QueryEQ applies the EQ predicate on the "query" field.
func QueryEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldQuery, v))
}

// QueryNEQ applies the NEQ predicate on the "query" field.
func QueryNEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldQuery, v))
}

// QueryIn applies the In predicate on the "query" field.
func QueryIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldIn(FieldQuery, vs...))
}

// QueryNotIn applies the NotIn predicate on the "query" field.
func QueryNotIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldNotIn(FieldQuery, vs...))
}

// QueryGT applies the GT predicate on the "query" field.
func QueryGT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGT(FieldQuery, v))
}

// QueryGTE applies the GTE predicate on the "query" field.
func QueryGTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGTE(FieldQuery, v))
}

// QueryLT applies the LT predicate on the "query" field.
func QueryLT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLT(FieldQuery, v))
}

// QueryLTE applies the LTE predicate on the "query" field.
func QueryLTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLTE(FieldQuery, v))
}

// QueryContains applies the Contains predicate on the "query" field.
func QueryContains(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContains(FieldQuery, v))
}

// QueryHasPrefix applies the HasPrefix predicate on the "query" field.
func QueryHasPrefix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasPrefix(FieldQuery, v))
}

// QueryHasSuffix applies the HasSuffix predicate on the "query" field.
func QueryHasSuffix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasSuffix(FieldQuery, v))
}

// QueryIsNil applies the IsNil predicate on the "query" field.
func QueryIsNil() predicate.Menu {
	return predicate.Menu(sql.FieldIsNull(FieldQuery))
}

// QueryNotNil applies the NotNil predicate on the "query" field.
func QueryNotNil() predicate.Menu {
	return predicate.Menu(sql.FieldNotNull(FieldQuery))
}

// QueryEqualFold applies the EqualFold predicate on the "query" field.
func QueryEqualFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEqualFold(FieldQuery, v))
}

// QueryContainsFold applies the ContainsFold predicate on the "query" field.
func QueryContainsFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContainsFold(FieldQuery, v))
}

// TitleEQ applies the EQ predicate on the "title" field.
func TitleEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEQ(FieldTitle, v))
}

// TitleNEQ applies the NEQ predicate on the "title" field.
func TitleNEQ(v string) predicate.Menu {
	return predicate.Menu(sql.FieldNEQ(FieldTitle, v))
}

// TitleIn applies the In predicate on the "title" field.
func TitleIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldIn(FieldTitle, vs...))
}

// TitleNotIn applies the NotIn predicate on the "title" field.
func TitleNotIn(vs ...string) predicate.Menu {
	return predicate.Menu(sql.FieldNotIn(FieldTitle, vs...))
}

// TitleGT applies the GT predicate on the "title" field.
func TitleGT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGT(FieldTitle, v))
}

// TitleGTE applies the GTE predicate on the "title" field.
func TitleGTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldGTE(FieldTitle, v))
}

// TitleLT applies the LT predicate on the "title" field.
func TitleLT(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLT(FieldTitle, v))
}

// TitleLTE applies the LTE predicate on the "title" field.
func TitleLTE(v string) predicate.Menu {
	return predicate.Menu(sql.FieldLTE(FieldTitle, v))
}

// TitleContains applies the Contains predicate on the "title" field.
func TitleContains(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContains(FieldTitle, v))
}

// TitleHasPrefix applies the HasPrefix predicate on the "title" field.
func TitleHasPrefix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasPrefix(FieldTitle, v))
}

// TitleHasSuffix applies the HasSuffix predicate on the "title" field.
func TitleHasSuffix(v string) predicate.Menu {
	return predicate.Menu(sql.FieldHasSuffix(FieldTitle, v))
}

// TitleEqualFold applies the EqualFold predicate on the "title" field.
func TitleEqualFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldEqualFold(FieldTitle, v))
}

// TitleContainsFold applies the ContainsFold predicate on the "title" field.
func TitleContainsFold(v string) predicate.Menu {
	return predicate.Menu(sql.FieldContainsFold(FieldTitle, v))
}

// HasParent applies the HasEdge predicate on the "parent" edge.
func HasParent() predicate.Menu {
	return predicate.Menu(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, ParentTable, ParentColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasParentWith applies the HasEdge predicate on the "parent" edge with a given conditions (other predicates).
func HasParentWith(preds ...predicate.Menu) predicate.Menu {
	return predicate.Menu(func(s *sql.Selector) {
		step := newParentStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasChildren applies the HasEdge predicate on the "children" edge.
func HasChildren() predicate.Menu {
	return predicate.Menu(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2M, false, ChildrenTable, ChildrenColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasChildrenWith applies the HasEdge predicate on the "children" edge with a given conditions (other predicates).
func HasChildrenWith(preds ...predicate.Menu) predicate.Menu {
	return predicate.Menu(func(s *sql.Selector) {
		step := newChildrenStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Menu) predicate.Menu {
	return predicate.Menu(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Menu) predicate.Menu {
	return predicate.Menu(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Menu) predicate.Menu {
	return predicate.Menu(sql.NotPredicates(p))
}
