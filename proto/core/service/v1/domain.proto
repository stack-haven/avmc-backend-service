syntax = "proto3";

package core.service.v1;

import "gnostic/openapi/v3/annotations.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/any.proto";
import "validate/validate.proto";
import "buf/validate/validate.proto";
import "common/pagination/pagination.proto";
import "common/enum/enum.proto";

option go_package = "backend-service/api/core/service/v1;v1";
option java_multiple_files = true;
option java_package = "core.service.v1";

service DomainService {
  // 创建域
	rpc CreateDomain (CreateDomainRequest) returns (CreateDomainResponse);
  // 更新域
	rpc UpdateDomain (UpdateDomainRequest) returns (UpdateDomainResponse);
  // 删除域
	rpc DeleteDomain (DeleteDomainRequest) returns (DeleteDomainResponse);
  // 获取域
	rpc GetDomain (GetDomainRequest) returns (GetDomainResponse);
  // 分页查询域
	rpc ListDomain (pagination.PagingRequest) returns (ListDomainResponse);
}

// 域信息
message Domain {
  // 域ID
  uint32 id = 1;
  // 域名称
  optional string name = 2 [
    (buf.validate.field).string = {min_len: 1, max_len: 20}, 
    (gnostic.openapi.v3.property) = {description: "域名称"}
  ];
  // 排序值
  optional int32 sort = 3 [
    (buf.validate.field).int32 = {gte: 0, lte: 100},
    (gnostic.openapi.v3.property) = {description: "排序值", default: {number: 10}}
  ];
  // 域状态 1 激活 2 未激活 3 禁用
  optional enum.Status status = 4 [
    (buf.validate.field).enum.defined_only = true,
    (gnostic.openapi.v3.property) = {description: "域状态 1 激活 2 未激活 3 禁用"}
  ];
  // 备注信息
  optional string remark = 5 [
    (buf.validate.field).string.max_len = 200,
    (gnostic.openapi.v3.property) = {description: "备注信息"}
  ];
  // 创建时间
  optional string created_at = 6 [
    (gnostic.openapi.v3.property) = {description: "创建时间"}
  ];
  // 更新时间
  optional string updated_at = 7 [
    (gnostic.openapi.v3.property) = {description: "更新时间"}
  ];
}

// 创建域请求
message CreateDomainRequest {
  Domain domain = 1 [
    (buf.validate.field).required = true,
    (gnostic.openapi.v3.property) = {description: "域信息"}
  ];
  // 操作人ID
  uint32 operator_id = 2 [
    (buf.validate.field).uint32.gt = 0,
    (gnostic.openapi.v3.property) = {description: "操作人ID"}
  ];
}

// 创建域响应
message CreateDomainResponse {
  // 域ID
  uint32 id = 1;
  // 域名称
  string name = 2;
}

// 更新域请求
message UpdateDomainRequest {
  uint32 id = 1 [
    (buf.validate.field).uint32.gt = 0,
    (gnostic.openapi.v3.property) = {description: "域ID"}
  ];
  Domain domain = 2 [
    (buf.validate.field).required = true,
    (gnostic.openapi.v3.property) = {description: "域信息"}
  ];
  // 操作人ID
  uint32 operator_id = 3 [
    (buf.validate.field).uint32.gt = 0,
    (gnostic.openapi.v3.property) = {description: "操作人ID"}
  ];
}
// 更新域响应
message UpdateDomainResponse {
  // 域ID
  uint32 id = 1;
}

// 删除域请求
message DeleteDomainRequest {
  // 域ID
  uint32 id = 1 [
    (buf.validate.field).uint32.gt = 0,
    (gnostic.openapi.v3.property) = {description: "域ID"}
  ];
  // 操作人ID
  uint32 operator_id = 2 [
    (buf.validate.field).uint32.gt = 0,
    (gnostic.openapi.v3.property) = {description: "操作人ID"}
  ];
}
// 删除域响应
message DeleteDomainResponse {
  // 域ID
  uint32 id = 1;
}

// 获取域请求
message GetDomainRequest {
  // 域ID
  uint32 id = 1 [
    (buf.validate.field).uint32.gt = 0,
    (gnostic.openapi.v3.property) = {description: "域ID"}
  ];
}
// 获取域响应
message GetDomainResponse {
  // 域信息
  Domain domain = 1;
}

// 分页查询域响应
message ListDomainResponse {
  // 域列表
  repeated Domain items = 1;
  // 总数
  int32 total = 2;
}